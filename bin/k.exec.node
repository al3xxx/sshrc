if [ -t 0 ]; then
  tty=true
else
  tty=false
fi

node=$1
extra_cmd=$2
if [[ "${extra_cmd}" == "" ]]; then
  extra_cmd='bash", "-c", "export SSHHOME=$(mktemp -d -p /dev/shm/ -t .$(whoami).sshrc.XXXX) && export SSHRCCLEANUP=$SSHHOME && export SSTAR='$SSTAR' && echo $SSTAR | base64 -d | tar mxzf - -C $SSHHOME && exec bash --rcfile $SSHHOME/.bashrc'
fi
cmd='["nsenter","--mount=/proc/1/ns/mnt","'${extra_cmd}'"]'
overrides="$(
cat <<EOF
{
  "spec": {
    "nodeName": "$node",
    "hostPID": true,
    "hostNetwork": true,
    "enableServiceLinks": false,
    "containers": [
      {
        "securityContext": {
          "privileged": true
        },
        "image": "busybox:stable",
        "name": "debug",
        "stdin": true,
        "stdinOnce": true,
        "tty": $tty,
        "command": $cmd
      }
    ],
    "tolerations": [
      { "effect": "NoExecute", "operator": "Exists" }
    ]
  }
}
EOF
)"

k delete pod "node-debugger-$node" --ignore-not-found=true --force 2>/dev/null
k run "node-debugger-$node" --image "busybox:stable" --restart=Never --rm --overrides="$overrides" --pod-running-timeout="1m" $([ "$tty" = true ] && echo -t) -i "debug"
